import{_ as e,c as o,o as n,e as c}from"./app.7b4e1434.js";const A=JSON.parse('{"title":"Direction","description":"","frontmatter":{},"headers":[{"level":2,"title":"Introduction","slug":"introduction"},{"level":2,"title":"Creating a Direction","slug":"creating-a-direction"}],"relativePath":"documentation/classes/direction/index.md"}'),t={name:"documentation/classes/direction/index.md"},s=c(`<h1 id="direction" tabindex="-1"><code>Direction</code> <a class="header-anchor" href="#direction" aria-hidden="true">#</a></h1><p>On this page you find the documentation for the <code>Direction</code> class.</p><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p>The <code>Direction</code> class represents a transition from one <code>Page</code> to another <code>Page</code>. It consists of the following parts:</p><ul><li><code>page</code>: A value indicating which <code>Page</code> the user should come to</li><li><code>condition</code>: A function indicating under which circumstance the <code>Direction</code> should be used</li><li><code>description</code>: A text describing the condition in the <code>Direction</code> (used for documentation only)</li></ul><p>A <code>Page</code> usually contains multiple <code>Direction</code>s, and when the user has interacted with the <code>Page</code> (for example clicked on a <code>Button</code>), the first <code>Direction</code> in the <code>Page</code> whose <code>condition</code> returns back <code>true</code> will be used to transition to the <code>page</code> in that <code>Direction</code>.</p><h2 id="creating-a-direction" tabindex="-1">Creating a <code>Direction</code> <a class="header-anchor" href="#creating-a-direction" aria-hidden="true">#</a></h2><p>All parts a <code>Direction</code> consists of are specified when creating the instance of the <code>Direction</code>. To create a new <code>Direction</code>, pass the constructor the parts:</p><ol><li>A value indicating which <code>Page</code> the <code>Direction</code> leads to, such as: <ul><li><code>MyPage</code> (a reference to the <code>Page</code> class)</li><li><code>new MyPage()</code> (an instance of the <code>Page</code> class)</li><li><code>() =&gt; new MyPage()</code> (a function returning the <code>Page</code> instance)</li></ul></li><li>A function (the condition) returning <code>true</code> when the <code>Direction</code> should be used, such as: <ul><li><code>() =&gt; Math.random() &lt; 0.5</code></li></ul></li><li>An optional string describing when the condition returns <code>true</code>, such as: <ul><li><code>&quot;Fifty-fifty&quot;</code></li></ul></li></ol><div class="tip custom-block"><p class="custom-block-title">Example</p><p>Example showing how to create a new <code>Direction</code>.</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> myDirection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Direction</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	GoodNightPage</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getHours</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Time to sleep</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>The direction can then be added to a <code>Page</code> using for example <a href="./../page/#creating-after-directions">Page.createAfterDirections()</a>.</p></div>`,10),a=[s];function i(l,d,r,p,h,u){return n(),o("div",null,a)}const g=e(t,[["render",i]]);export{A as __pageData,g as default};
